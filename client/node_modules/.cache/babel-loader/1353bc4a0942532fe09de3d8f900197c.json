{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajb02\\\\OneDrive\\\\Documents\\\\Work\\\\List-Site\\\\client\\\\src\\\\components\\\\Search.js\";\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nconst source = _.times(5, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, '$')\n}));\n\nexport default class SearchComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(source, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const {\n      isLoading,\n      value,\n      results\n    } = this.state;\n    return (//   <Grid>\n      //     <Grid.Column width={6}>\n      React.createElement(Search, Object.assign({\n        loading: isLoading,\n        onResultSelect: this.handleResultSelect,\n        onSearchChange: _.debounce(this.handleSearchChange, 500, {\n          leading: true\n        }),\n        results: results,\n        value: value,\n        size: \"large\"\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }))\n    );\n    {\n      /* </Grid.Column>\r\n      <Grid.Column width={10}>\r\n       <Segment>\r\n         <Header>State</Header>\r\n         <pre style={{ overflowX: 'auto' }}>\r\n           {JSON.stringify(this.state, null, 2)}\r\n         </pre>\r\n         <Header>Options</Header>\r\n         <pre style={{ overflowX: 'auto' }}>\r\n           {JSON.stringify(source, null, 2)}\r\n         </pre>\r\n       </Segment>\r\n      </Grid.Column>\r\n      </Grid> */\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ajb02/OneDrive/Documents/Work/List-Site/client/src/components/Search.js"],"names":["_","faker","React","Component","Search","Grid","Header","Segment","initialState","isLoading","results","value","source","times","title","company","companyName","description","catchPhrase","image","internet","avatar","price","finance","amount","SearchComponent","state","handleResultSelect","e","result","setState","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filter","render","debounce","leading","props"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,OAA/B,QAA8C,mBAA9C;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,OAAO,EAAE,EAA7B;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAArB;;AAEA,MAAMC,MAAM,GAAGZ,CAAC,CAACa,KAAF,CAAQ,CAAR,EAAW,OAAO;AAC/BC,EAAAA,KAAK,EAAEb,KAAK,CAACc,OAAN,CAAcC,WAAd,EADwB;AAE/BC,EAAAA,WAAW,EAAEhB,KAAK,CAACc,OAAN,CAAcG,WAAd,EAFkB;AAG/BC,EAAAA,KAAK,EAAElB,KAAK,CAACmB,QAAN,CAAeC,MAAf,EAHwB;AAI/BC,EAAAA,KAAK,EAAErB,KAAK,CAACsB,OAAN,CAAcC,MAAd,CAAqB,CAArB,EAAwB,GAAxB,EAA6B,CAA7B,EAAgC,GAAhC;AAJwB,CAAP,CAAX,CAAf;;AAOA,eAAe,MAAMC,eAAN,SAA8BtB,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACrDuB,KADqD,GAC7ClB,YAD6C;;AAAA,SAGrDmB,kBAHqD,GAGhC,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAmB,KAAKC,QAAL,CAAc;AAAEnB,MAAAA,KAAK,EAAEkB,MAAM,CAACf;AAAhB,KAAd,CAHa;;AAAA,SAKrDiB,kBALqD,GAKhC,CAACH,CAAD,EAAI;AAAEjB,MAAAA;AAAF,KAAJ,KAAkB;AACrC,WAAKmB,QAAL,CAAc;AAAErB,QAAAA,SAAS,EAAE,IAAb;AAAmBE,QAAAA;AAAnB,OAAd;AAEAqB,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI,KAAKN,KAAL,CAAWf,KAAX,CAAiBsB,MAAjB,GAA0B,CAA9B,EAAiC,OAAO,KAAKH,QAAL,CAActB,YAAd,CAAP;AAEjC,cAAM0B,EAAE,GAAG,IAAIC,MAAJ,CAAWnC,CAAC,CAACoC,YAAF,CAAe,KAAKV,KAAL,CAAWf,KAA1B,CAAX,EAA6C,GAA7C,CAAX;;AACA,cAAM0B,OAAO,GAAIR,MAAD,IAAYK,EAAE,CAACI,IAAH,CAAQT,MAAM,CAACf,KAAf,CAA5B;;AAEA,aAAKgB,QAAL,CAAc;AACZrB,UAAAA,SAAS,EAAE,KADC;AAEZC,UAAAA,OAAO,EAAEV,CAAC,CAACuC,MAAF,CAAS3B,MAAT,EAAiByB,OAAjB;AAFG,SAAd;AAID,OAVS,EAUP,GAVO,CAAV;AAWD,KAnBoD;AAAA;;AAqBrDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE/B,MAAAA,SAAF;AAAaE,MAAAA,KAAb;AAAoBD,MAAAA;AAApB,QAAgC,KAAKgB,KAA3C;AAEA,WACA;AACA;AACM,0BAAC,MAAD;AACE,QAAA,OAAO,EAAEjB,SADX;AAEE,QAAA,cAAc,EAAE,KAAKkB,kBAFvB;AAGE,QAAA,cAAc,EAAE3B,CAAC,CAACyC,QAAF,CAAW,KAAKV,kBAAhB,EAAoC,GAApC,EAAyC;AACvDW,UAAAA,OAAO,EAAE;AAD8C,SAAzC,CAHlB;AAME,QAAA,OAAO,EAAEhC,OANX;AAOE,QAAA,KAAK,EAAEC,KAPT;AAQE,QAAA,IAAI,EAAC;AARP,SASM,KAAKgC,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHN;AAcI;AAAC;;;;;;;;;;;;;;AAaQ;AAEd;;AArDoD","sourcesContent":["import _ from 'lodash'\r\nimport faker from 'faker'\r\nimport React, { Component } from 'react'\r\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\r\n\r\nconst initialState = { isLoading: false, results: [], value: '' }\r\n\r\nconst source = _.times(5, () => ({\r\n  title: faker.company.companyName(),\r\n  description: faker.company.catchPhrase(),\r\n  image: faker.internet.avatar(),\r\n  price: faker.finance.amount(0, 100, 2, '$'),\r\n}))\r\n\r\nexport default class SearchComponent extends Component {\r\n  state = initialState\r\n\r\n  handleResultSelect = (e, { result }) => this.setState({ value: result.title })\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) => re.test(result.title)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(source, isMatch),\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, value, results } = this.state\r\n\r\n    return (\r\n    //   <Grid>\r\n    //     <Grid.Column width={6}>\r\n          <Search\r\n            loading={isLoading}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n            size='large'\r\n            {...this.props}\r\n          />)\r\n        {/* </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          <Segment>\r\n            <Header>State</Header>\r\n            <pre style={{ overflowX: 'auto' }}>\r\n              {JSON.stringify(this.state, null, 2)}\r\n            </pre>\r\n            <Header>Options</Header>\r\n            <pre style={{ overflowX: 'auto' }}>\r\n              {JSON.stringify(source, null, 2)}\r\n            </pre>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid> */}\r\n    \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}