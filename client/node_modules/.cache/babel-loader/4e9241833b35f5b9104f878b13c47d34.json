{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\ajb02\\\\OneDrive\\\\Documents\\\\Work\\\\List-Site\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ajb02\\\\OneDrive\\\\Documents\\\\Work\\\\List-Site\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\ajb02\\\\OneDrive\\\\Documents\\\\Work\\\\List-Site\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\ajb02\\\\OneDrive\\\\Documents\\\\Work\\\\List-Site\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\ajb02\\\\OneDrive\\\\Documents\\\\Work\\\\List-Site\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import'../CSS/App.css';import{Button,Card,Image}from'semantic-ui-react';import eggs from'../images/eggs.jpg';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={restaurants:[],images:[eggs]};_this.getRestaurants=function(_){fetch('http://localhost:5000/restaurants').then(function(response){return response.json();}).then(function(response){return _this.setState({restaurants:response.data});}).catch(function(err){return console.error(err);});};_this.renderRestaurant=function(_ref){var RestrntID=_ref.RestrntID,Name=_ref.Name,Address=_ref.Address,City=_ref.City,State=_ref.State,Zipcode=_ref.Zipcode,Phone=_ref.Phone,Website=_ref.Website,DateAdded=_ref.DateAdded,OnlineOrders=_ref.OnlineOrders,OrderWebsite=_ref.OrderWebsite,Delivery=_ref.Delivery;return(// NOTE: future add maybe an array of images that this maps through for each restaurnt\nReact.createElement(Card,{key:RestrntID},React.createElement(Card.Content,null,React.createElement(Image,{floated:\"right\",size:\"medium\",src:eggs,rounded:true})),React.createElement(Card.Content,null,React.createElement(Card.Header,null,Name),React.createElement(Card.Meta,null,Phone),React.createElement(Card.Description,null,\"Located at \",Address,\", \",City,\", \",State,\", \",Zipcode)),React.createElement(Card.Content,null,React.createElement(Card.Meta,null),React.createElement(Card.Meta,null,\"Online Orders: \",OnlineOrders),React.createElement(Card.Meta,null,\"Delivery: \",Delivery)),React.createElement(Card.Content,{extra:true},React.createElement(\"div\",{className:\"ui two buttons\"},React.createElement(Button,{basic:true,color:\"green\"},React.createElement(\"a\",{href:Website,className:\"websiteBtn\"},\"Website\")),React.createElement(Button,{basic:true,color:\"red\"},React.createElement(\"a\",{href:OrderWebsite,className:\"orderBtn\"},\"Order Now!\"))))));};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.getRestaurants();}},{key:\"render\",value:function render(){var restaurants=this.state.restaurants;var changeText=function changeText(e){if(e==='Y'){return'Yes';}else{return'no';}};return React.createElement(\"div\",{className:\"App\"},React.createElement(Card.Group,null,restaurants.map(this.renderRestaurant)));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["C:/Users/ajb02/OneDrive/Documents/Work/List-Site/client/src/components/Restaurant.js"],"names":["React","Component","Button","Card","Image","eggs","App","state","restaurants","images","getRestaurants","_","fetch","then","response","json","setState","data","catch","err","console","error","renderRestaurant","RestrntID","Name","Address","City","State","Zipcode","Phone","Website","DateAdded","OnlineOrders","OrderWebsite","Delivery","changeText","e","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../CSS/App.css';\n\nimport { Button, Card, Image } from 'semantic-ui-react'\nimport eggs from '../images/eggs.jpg'\nclass App extends Component {\n  \n  state = {\n    restaurants: [],\n    images: [\n      eggs,\n      \n    ]\n  }\n\n  componentDidMount() {\n    this.getRestaurants()\n  }\n\n  getRestaurants = _ => {\n    fetch('http://localhost:5000/restaurants')\n    .then(response => response.json())\n    .then(response => this.setState({ restaurants: response.data }))\n    .catch(err => console.error(err));\n  }\n\n  renderRestaurant = ({   \n    RestrntID, Name, \n    Address, City, State, Zipcode, \n    Phone, Website, DateAdded, \n    OnlineOrders, OrderWebsite, Delivery \n  }) => \n    // NOTE: future add maybe an array of images that this maps through for each restaurnt\n    <Card key={RestrntID}>\n      <Card.Content>\n        <Image\n          floated='right'\n          size='medium'\n          src={eggs}\n          rounded\n        />\n      </Card.Content>\n      <Card.Content>\n      <Card.Header>{Name}</Card.Header>\n        <Card.Meta>{Phone}</Card.Meta>\n        <Card.Description>\n          Located at {Address}, {City}, {State}, {Zipcode} \n        </Card.Description>\n      </Card.Content>\n      <Card.Content>\n      <Card.Meta></Card.Meta>\n      <Card.Meta>Online Orders: { OnlineOrders}</Card.Meta>\n      <Card.Meta>Delivery: { Delivery}</Card.Meta>\n      </Card.Content>\n      <Card.Content extra>\n        <div className='ui two buttons'>\n          <Button basic color='green' >\n          <a href={Website} className='websiteBtn'>Website</a>\n          </Button>\n          <Button basic color='red'>\n            <a href={OrderWebsite} className='orderBtn'>Order Now!</a>\n            </Button>\n        </div>\n      </Card.Content>\n    </Card>\n\n  render() {\n    const { restaurants } = this.state\n    \n    const changeText = (e) => {\n      if (e === 'Y') {\n        return 'Yes'\n      } else {\n        return 'no'\n      }\n    }\n    return (\n      \n      <div className=\"App\">\n        <Card.Group>\n          {restaurants.map(this.renderRestaurant)}\n        </Card.Group>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}