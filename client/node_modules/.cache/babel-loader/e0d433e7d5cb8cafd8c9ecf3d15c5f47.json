{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajb02\\\\OneDrive\\\\Documents\\\\Work\\\\List-Site\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Icon, Table } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      restaurants: []\n    };\n\n    this.getRestaurants = _ => {\n      fetch('http://localhost:5000/restaurants').then(response => response.json()).then(response => this.setState({\n        restaurants: response.data\n      })).catch(err => console.error(err));\n    };\n\n    this.renderRestaurant = ({\n      restrntID,\n      Name,\n      Phone,\n      Address,\n      Website,\n      Delivery\n    }) => React.createElement(\"tr\", {\n      key: restrntID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, Name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, Phone), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, Address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, Website), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, Delivery));\n  }\n\n  componentDidMount() {\n    this.getRestaurants();\n  }\n\n  render() {\n    const {\n      restaurants\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Table, {\n      celled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Notes\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      positive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Jimmy\"), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"None\")))), restaurants.map(this.renderRestaurant));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ajb02/OneDrive/Documents/Work/List-Site/client/src/App.js"],"names":["React","Component","Icon","Table","App","state","restaurants","getRestaurants","_","fetch","then","response","json","setState","data","catch","err","console","error","renderRestaurant","restrntID","Name","Phone","Address","Website","Delivery","componentDidMount","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,OAAO,kCAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BI,KAF0B,GAElB;AACNC,MAAAA,WAAW,EAAE;AADP,KAFkB;;AAAA,SAU1BC,cAV0B,GAUTC,CAAC,IAAI;AACpBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAI,KAAKE,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEK,QAAQ,CAACG;AAAxB,OAAd,CAFlB,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHd;AAID,KAfyB;;AAAA,SAiB1BG,gBAjB0B,GAiBP,CAAC;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA,OAA1B;AAAmCC,MAAAA,OAAnC;AAA4CC,MAAAA;AAA5C,KAAD,KACjB;AAAI,MAAA,GAAG,EAAEL,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,KAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,OAAL,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,OAAL,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,QAAL,CALF,CAlBwB;AAAA;;AAM1BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,cAAL;AACD;;AAkBDoB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,WAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CADA,CADR,EASQ,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,KAAD,CAAO,GAAP;AAAW,MAAA,QAAQ,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CAFA,CATR,CADF,EAoBKC,WAAW,CAACsB,GAAZ,CAAgB,KAAKT,gBAArB,CApBL,CAFF;AAyBD;;AArDyB;;AAwD5B,eAAef,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport { Icon, Table } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass App extends Component {\n  \n  state = {\n    restaurants: []\n  }\n\n  componentDidMount() {\n    this.getRestaurants()\n  }\n\n  getRestaurants = _ => {\n    fetch('http://localhost:5000/restaurants')\n    .then(response => response.json())\n    .then(response => this.setState({ restaurants: response.data }))\n    .catch(err => console.error(err));\n  }\n\n  renderRestaurant = ({ restrntID, Name, Phone, Address, Website, Delivery  }) => \n    <tr key={restrntID}>\n      <td>{Name}</td>\n      <td>{Phone}</td>\n      <td>{Address}</td>\n      <td>{Website}</td>\n      <td>{Delivery}</td>\n    </tr>\n\n  render() {\n    const { restaurants } = this.state\n    return (\n      \n      <div className=\"App\">\n        <Table celled>\n                <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Name</Table.HeaderCell>\n                    <Table.HeaderCell>Status</Table.HeaderCell>\n                    <Table.HeaderCell>Notes</Table.HeaderCell>\n                </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                \n                <Table.Row positive>\n                    <Table.Cell>Jimmy</Table.Cell>\n                    <Table.Cell></Table.Cell>\n                    <Table.Cell>None</Table.Cell>\n                </Table.Row>\n                \n                </Table.Body>\n        </Table>\n          {restaurants.map(this.renderRestaurant)}\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}